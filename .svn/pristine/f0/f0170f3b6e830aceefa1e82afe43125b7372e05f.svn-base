<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gsccs.cms.auth.dao.UnitMapper">
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" />
	<resultMap id="BaseResultMap" type="com.gsccs.cms.auth.model.Unit">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="parId" jdbcType="VARCHAR" property="parid" />
		<result column="isOk" jdbcType="CHAR" property="isok" />
		<result column="ismail" jdbcType="CHAR" property="ismail" />
		<result column="orderNum" jdbcType="INTEGER" property="ordernum" />
		<result column="appid" property="appid" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, parId, isOk,ismail, orderNum, appid
	</sql>
	<sql id="selectByExampleSql">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from sys_unit
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</sql>
	<select useCache="false" id="selectByExample"
		parameterType="com.gsccs.cms.auth.model.UnitExample" resultMap="BaseResultMap">
		<include refid="selectByExampleSql" />
	</select>
	<select useCache="true" id="selectByExampleCache"
		parameterType="com.gsccs.cms.auth.model.UnitExample" resultMap="BaseResultMap">
		<include refid="selectByExampleSql" />
	</select>

	<select useCache="false" id="selectPageByExample" resultMap="BaseResultMap"
		parameterType="com.gsccs.cms.auth.model.UnitExample">
		SELECT *
		FROM sys_unit
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		limit ${skip},${pageSize}
	</select>

	<select useCache="false" id="findByUser"
		parameterType="com.gsccs.cms.auth.model.UnitExample" resultMap="BaseResultMap">
		select
		* from sys_unit unit left join sys_unit_user unit_user on
		unit.id=unit_user.unit where unit_user.users='${userId}' and
		unit.isOk='1'
	</select>
	<select useCache="false" id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_unit
		where id = #{id,jdbcType=VARCHAR}
	</select>

	<select useCache="false" id="selectUnitByparid" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_unit
		where parid = #{parid,jdbcType=VARCHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from sys_unit
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.gsccs.cms.auth.model.UnitExample">
		delete from sys_unit
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.gsccs.cms.auth.model.Unit">
		insert into sys_unit (id,
		name, parId,
		isOk,ismail, orderNum)
		values (#{id,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{parid,jdbcType=VARCHAR},
		#{isok,jdbcType=CHAR}, #{ismail,jdbcType=CHAR},
		#{ordernum,jdbcType=INTEGER},
		#{appid,jdbcType=VARCHAR})
	</insert>

	<select useCache="false" id="countByExample"
		parameterType="com.gsccs.cms.auth.model.UnitExample" resultType="java.lang.Integer">
		select count(*) from sys_unit
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update sys_unit
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.parid != null">
				parId = #{record.parid,jdbcType=VARCHAR},
			</if>
			<if test="record.isok != null">
				isOk = #{record.isok,jdbcType=CHAR},
			</if>
			<if test="record.ismail != null">
				ismail = #{record.ismail,jdbcType=CHAR},
			</if>
			<if test="record.ordernum != null">
				orderNum = #{record.ordernum,jdbcType=INTEGER},
			</if>
			      <if test="record.appid != null" >
        appid = #{record.appid,jdbcType=VARCHAR},
      </if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updatePar" parameterType="com.gsccs.cms.auth.model.Unit">
		update sys_unit
		<set>
			<if test="parid != null">
				parId = #{parid,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByExample" parameterType="map">
		update sys_unit
		set id = #{record.id,jdbcType=VARCHAR},
		name =
		#{record.name,jdbcType=VARCHAR},
		parId =
		#{record.parid,jdbcType=VARCHAR},
		isOk = #{record.isok,jdbcType=CHAR},
		ismail = #{record.ismail,jdbcType=CHAR},
		orderNum =
		#{record.ordernum,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.gsccs.cms.auth.model.Unit">
		update sys_unit
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="parid != null">
				parId = #{parid,jdbcType=VARCHAR},
			</if>
			<if test="isok != null">
				isOk = #{isok,jdbcType=CHAR},
			</if>
			<if test="ismail != null">
				ismail = #{ismail,jdbcType=CHAR},
			</if>
			<if test="ordernum != null">
				orderNum = #{ordernum,jdbcType=INTEGER},
			</if>
			      <if test="appid != null" >
        appid = #{appid,jdbcType=VARCHAR},
      </if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.gsccs.cms.auth.model.Unit">
		update sys_unit
		set name = #{name,jdbcType=VARCHAR},
		parId = #{parid,jdbcType=VARCHAR},
		isOk = #{isok,jdbcType=CHAR},
		ismail = #{ismail,jdbcType=CHAR},
		orderNum = #{ordernum,jdbcType=INTEGER},
    	appid = #{appid,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=VARCHAR}
	</update>
	<sql id="Example_Clause">
		<foreach collection="oredCriteria" item="criteria" separator="or">
			<if test="criteria.valid">
				<trim>
					<foreach collection="criteria.criteria" item="criterion">
						<choose>
							<when test="criterion.noValue">
								and ${criterion.condition}
							</when>
							<when test="criterion.singleValue">
								and ${criterion.condition} #{criterion.value}
							</when>
							<when test="criterion.betweenValue">
								and ${criterion.condition} #{criterion.value} and
								#{criterion.secondValue}
							</when>
							<when test="criterion.listValue">
								and ${criterion.condition}
								<foreach close=")" collection="criterion.value" item="listItem"
									open="(" separator=",">
									#{listItem}
								</foreach>
							</when>
						</choose>
					</foreach>
				</trim>
			</if>
		</foreach>
	</sql>
</mapper>