package com.gsccs.cms.module.service.impl;

import java.util.List;
import java.util.UUID;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.gsccs.cms.module.dao.VoteItemMapper;
import com.gsccs.cms.module.model.VoteItem;
import com.gsccs.cms.module.model.VoteItemExample;
import com.gsccs.cms.module.model.VoteItemExample.Criteria;
import com.gsccs.cms.module.service.VoteItemService;

/**
 * 网上调查选项
 * 
 * @author x.d zhang
 * @version 1.0
 * 
 */
@Service("answerService")
public class VoteItemServiceImpl implements VoteItemService {

	@Resource
	private VoteItemMapper answerMapper;

	/**
	 * 查询批定网上调查下选项
	 * 
	 * @param questidid
	 * @return
	 */
	public List<VoteItem> findByQuestion(String questidid, String isok,
			boolean cache) {
		VoteItemExample example = new VoteItemExample();
		Criteria criteria = example.createCriteria();
		criteria.andQuestionidEqualTo(questidid);
		if (isok != null && isok.trim().length() > 0) {
			if ("1".equals(isok)) {
				criteria.andIsokEqualTo("1");
			} else if ("0".equals(isok)) {
				criteria.andSql(" (isok is null or isok='0') ");
			}
		}
		example.setOrderByClause(" ordernum ");
		if (cache) {
			return answerMapper.selectByExampleCache(example);
		} else {
			return answerMapper.selectByExample(example);
		}
	}

	/**
	 * 根据id查询
	 * 
	 * @param id
	 * @param cache
	 * @return
	 */
	public VoteItem findById(String id, boolean cache) {
		if (cache) {
			return answerMapper.selectByPrimaryKeyCache(id);
		} else {
			return answerMapper.selectByPrimaryKey(id);
		}
	}

	/**
	 * 更新
	 * 
	 * @param answer
	 */
	public void update(VoteItem answer) {
		answerMapper.updateByPrimaryKey(answer);
	}

	/**
	 * 选择
	 * 
	 * @param id
	 */
	public void selectnum(String id) {
		answerMapper.selectnum(id);
	}

	/**
	 * 添加
	 * 
	 * @param answer
	 * @return
	 */
	public String add(VoteItem answer) {
		answer.setId(UUID.randomUUID().toString());
		answerMapper.insert(answer);
		return answer.getId();
	}

	/**
	 * 删除
	 * 
	 * @param id
	 */
	public void del(String id) {
		answerMapper.deleteByPrimaryKey(id);
	}

	/**
	 * 统计选择次数
	 * 
	 * @param questidid
	 * @param isok
	 * @param cache
	 * @return
	 */
	public int countSelectnum(String questidid, String isok, boolean cache) {
		VoteItemExample example = new VoteItemExample();
		Criteria criteria = example.createCriteria();
		criteria.andQuestionidEqualTo(questidid);
		if (isok != null && isok.trim().length() > 0) {
			if ("1".equals(isok)) {
				criteria.andIsokEqualTo("1");
			} else if ("0".equals(isok)) {
				criteria.andSql(" (isok is null or isok='0') ");
			}
		}
		example.setOrderByClause(" ordernum ");
		if (cache) {
			return answerMapper.countSelectnumByExample(example);
		} else {
			return answerMapper.countSelectnumByExampleCache(example);
		}
	}
}
