package com.gsccs.cms.freemarker.directive;

import java.io.IOException;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.gsccs.cms.auth.model.Users;
import com.gsccs.cms.auth.service.UserService;
import com.gsccs.cms.bass.base.BaseDirective;

import freemarker.core.Environment;
import freemarker.ext.beans.BeanModel;
import freemarker.ext.beans.BeansWrapper;
import freemarker.template.SimpleNumber;
import freemarker.template.TemplateDirectiveBody;
import freemarker.template.TemplateDirectiveModel;
import freemarker.template.TemplateException;
import freemarker.template.TemplateModel;

/**
 * 用户列表标签 
 * 参数: filter 空字符:所有;"mail":可以接收互动信件的用户 cache 是否使用缓存，默认为false
 * 
 * 返回值 user 用户对象 index 索引
 * 
 * <@userList filter="mail" cache="true";user,index> ${index+1} ${user.name}
 * </@userList>
 * 
 * 
 * @author x.d zhang
 * @version 1.0
 */

@Service("userListDirective")
public class UserListDirective extends BaseDirective implements
		TemplateDirectiveModel {
	
	@Resource
	private UserService userService;

	public void execute(Environment env, Map params, TemplateModel[] loopVars,
			TemplateDirectiveBody body) throws TemplateException, IOException {

		// 获取参数
		String filter = getParam(params, "filter");

		if (body != null) {
			// 设置循环变量
			if (loopVars != null && loopVars.length > 0) {
				// 查询
				String ismail = "";
				if ("mail".equals(filter)) {
					ismail = "1";
				}
				Users user = new Users();
				user.setIsmail(ismail);
				boolean cache = "true".equals(getParam(params, "cache")) ? true
						: false;
				List<Users> userList = userService.find(user, cache);
				if (userList != null && userList.size() > 0) {
					for (int i = 0; i < userList.size(); i++) {
						loopVars[0] = new BeanModel(userList.get(i),
								new BeansWrapper());
						if (loopVars.length > 1) {
							loopVars[1] = new SimpleNumber(i);
						}
						body.render(env.getOut());
					}
				}
			}
		}
	}


}