package com.gsccs.cms.controller.web;

import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.gsccs.cms.bass.controller.CmsBaseController;
import com.gsccs.cms.core.model.Site;
import com.gsccs.cms.core.service.ChannelService;
import com.gsccs.cms.core.service.SiteService;
import com.gsccs.cms.member.model.Member;
import com.gsccs.cms.member.service.CreditruleService;
import com.gsccs.cms.module.model.Guestbook;
import com.gsccs.cms.module.service.GuestBookService;
import com.gsccs.cms.weixin.model.WxApp;
import com.gsccs.weixin.service.TemplateApi;

import io.github.elkan1788.mpsdk4j.vo.api.Template;

/**
 * O2O控制类
 * 
 * 留言相关操作
 * 
 * @author x.d zhang
 * @version 1.0
 */
@Controller("WebGuestbookController")
@RequestMapping("/web")
public class WebGuestbookController extends CmsBaseController {
	

	private String WXAPPID = "wx1562950d23bf4c3a";
	
	private String DOMAIN = "http://www.pcwxdj.com";

	@Resource
	private GuestBookService guestbookService;
	@Resource
	private SiteService siteService;
	@Resource
	private CreditruleService creditruleService;
	@Resource
	private ChannelService channelService;
	@Resource
	private TemplateApi templateApi;

	/**
	 * 咨询列表
	 * 
	 * @return
	 */
	@RequestMapping("/gbList.html")
	public String guestbookList(@RequestParam(defaultValue = "1") int page,
			@RequestParam(defaultValue = "500") int pagesize, ModelMap map, HttpServletResponse response) {
		Guestbook param = new Guestbook();
		List<Guestbook> guestbookList = guestbookService.find(param, "addtime desc", page, pagesize, true);
		if (null != guestbookList && guestbookList.size() > 0) {
			for (Guestbook guestbook : guestbookList) {
				List<Guestbook> replyList = guestbookService.findByParid(guestbook.getId(), true);
				guestbook.setReplyList(replyList);
			}
		}
		map.put("guestbookList", guestbookList);
		return "web/guestbook";
	}

	/**
	 * 跳转发布页面
	 * 
	 * @return
	 */
	@RequestMapping("/gbAdd.html")
	public String publish(String openid,ModelMap map, HttpServletResponse response) {
		map.put("openid", openid);
		return "web/publish";
	}

	/* 查询二级单位 */
	@RequestMapping("/getSon.html")
	@ResponseBody
	public String getSon(String id, HttpServletResponse response) {
		Site site = new Site();
		site.setSitetype(id);
		List<Site> sites = siteService.find(site, null, 1, 100);
		String sonSubjectJson = JSON.toJSONString(sites);
		response.setCharacterEncoding("utf-8");
		response.setContentType("application/json;charset=UTF-8");
		return sonSubjectJson;
	}

	/**
	 * 发布咨询
	 * 
	 * @return
	 */
	@RequestMapping("/gbQuery.html")
	public String query(ModelMap map, HttpServletResponse response) {
		return "web/search";
	}

	/**
	 * 事项提交保存
	 * 
	 * @return
	 */
	@RequestMapping("/gbSave.html")
	@ResponseBody
	public String guestbookSave(String openid,Guestbook guestbook, String siteid, ModelMap map, HttpServletResponse response) {
		String msg = "";
		if (guestbook != null) {
			// 保存留言内容
			guestbook.setAddtime(new Date());
			guestbook.setIp(request.getRemoteAddr());
			guestbook.setState("0");
			msg = guestbookService.add(guestbook);

			// 发送模板通知
			// 模板名称：业务受理
			WxApp wxApp = wxAppService.findById(WXAPPID);
			
			String tmlShortId = "OPENTM406851402";
			String tmlId = templateApi.getTemplateId(wxApp, tmlShortId);
			// 点击模板消息的跳转页面 (URL置空，则在发送后，点击模板消息会进入一个空白页面（ios），或无法点击（android）)
			String url = "";
			// 模板消息内容数组 {first，keyword1-3，remark}
			Template[] tmls = { new Template("first", "您好，我们已成功受理您提交的事项"), new Template("keyword1", guestbook.getAddtimeStr()),
					new Template("keyword2", "事项上报"), new Template("keyword3", "正在处理中"),
					 new Template("remark", "<p>1.我们将会通过微信或者电话及时给您反馈处理进度。</p><p>2.您可以使用手机号主动查询处理进度.</p>") };

				templateApi.sendTemplateMsg(wxApp, openid, tmlId, "#173177", url, tmls);
			// 用完即删除模板，防止模版数量25上限后失效
			templateApi.delTemplateI(wxApp, tmlId);

			return msg;
		}
		return null;
	}

	// 图片上传
	/*
	 * @RequestMapping("/upload.html") public String
	 * uploadImg(@RequestParam(value = "file", required = false) MultipartFile[]
	 * file, HttpServletRequest request){
	 * 
	 * String path =
	 * request.getSession().getServletContext().getRealPath("upload"); String
	 * fileName=file[0].getName(); File targetFile = new File(path, fileName);
	 * if(!targetFile.exists()){ targetFile.mkdirs(); }
	 * 
	 * //保存 try { file.transferTo(targetFile); } catch (Exception e) {
	 * e.printStackTrace(); }
	 * 
	 * return "result"; }
	 */
	
//	curd

}
