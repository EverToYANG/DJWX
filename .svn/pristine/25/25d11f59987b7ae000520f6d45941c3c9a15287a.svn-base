package com.gsccs.cms.freemarker.directive;

import java.io.IOException;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.gsccs.cms.bass.base.BaseDirective;
import com.gsccs.cms.module.model.Applyopen;
import com.gsccs.cms.module.service.ApplyopenService;

import freemarker.core.Environment;
import freemarker.ext.beans.BeanModel;
import freemarker.ext.beans.BeansWrapper;
import freemarker.template.TemplateDirectiveBody;
import freemarker.template.TemplateDirectiveModel;
import freemarker.template.TemplateException;
import freemarker.template.TemplateModel;

/**
 * 根据查询码查询申请处理结果
 * 参数: querycode 查询码 cache 是否使用缓存，默认为false
 * 
 * 返回值 applyopen applyopen对象
 * 
 * 示例 <@applyopenQuery querycode="" ;applyopen> ${applyopen.recontent}
 * </@applyopenQuery>
 * 
 * 
 * @author x.d zhang
 * @version 1.0
 * 
 */

@Service("applyopenQueryDirective")
public class ApplyopenQueryDirective extends BaseDirective implements
		TemplateDirectiveModel {

	@Resource
	private ApplyopenService applyopenService;

	public void execute(Environment env, Map params, TemplateModel[] loopVars,
			TemplateDirectiveBody body) throws TemplateException, IOException {
		String querycode = getParam(params, "querycode");
		if (querycode.trim().length() > 0) {
			if (body != null) {
				// 设置循环变量
				if (loopVars != null && loopVars.length > 0) {
					Applyopen applyopen = applyopenService.findByQuerycode(
							querycode,
							"true".equals(getParam(params, "cache")) ? true
									: false);
					if (applyopen != null) {
						loopVars[0] = new BeanModel(applyopen,
								new BeansWrapper());
					} else {
						loopVars[0] = new BeanModel(new Applyopen(),
								new BeansWrapper());
					}
					body.render(env.getOut());
				}
			}
		}
	}

}