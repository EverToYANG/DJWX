package com.gsccs.cms.controller.web;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.gsccs.cms.bass.controller.CmsBaseController;
import com.gsccs.cms.bass.utils.FileUtil;
import com.gsccs.cms.bass.utils.FreeMarkerUtil;
import com.gsccs.cms.core.model.Site;
import com.gsccs.cms.core.service.SiteService;
import com.gsccs.cms.module.model.Report;
import com.gsccs.cms.module.service.ReportService;

import freemarker.template.TemplateModelException;

/**
 * 在线申报相关操作
 * 
 * @author x.d zhang
 * @version 1.0
 * 
 */
@Controller("WebReportController")
@RequestMapping("/web")
public class WebReportController extends CmsBaseController{

	@Resource
	private SiteService siteService;
	@Resource
	private ReportService reportService;
	/**
	 * 保存
	 * @return
	 * @throws IOException 
	 * @throws TemplateModelException 
	 */
	@RequestMapping("/reportSave.htm")
	public String reportSave(Report report,String siteid,String templetPath,String validatecode,
			@RequestParam(value = "attchfile", required = false) MultipartFile attchfile,
			ModelMap map,HttpServletResponse response) throws TemplateModelException, IOException{
		if (report!=null) {
			Site site=siteService.findById(siteid);
			if (site!=null && site.getTemplet()!=null 
					&& site.getTemplet().trim().length()>0) {
				if (validatecode==null || !validatecode.equals(session.getAttribute("rand"))) {
					msg="验证码错误!";
				}else {
					boolean issave=true;
					report.setAddtime(new Date());
					report.setIp(request.getRemoteAddr());
					SimpleDateFormat sdf=new SimpleDateFormat("yyyyMMddHHmmss");
					report.setQuerycode(sdf.format(new Date())+(int)(Math.random()*1000));
					report.setState("0");
					if (attchfile!=null && attchfile.getSize()>0) {
						//生成目标文件
						String root=request.getRealPath("/");
						String ext=FileUtil.getExt(attchfile.getOriginalFilename()).toLowerCase();
						if (getConfigVal("attchType").indexOf(ext.replace(".", ""))<0) {
							msg="<script>alert('只能上传"+getConfigVal("attchType")+"格式的附件!');history.back();</script>";
							issave=false;
						}else {
							String id=UUID.randomUUID().toString();
							File targetFile=new File(root+"/upload/"+site.getId()+"/"+id+ext);
							File folder=new File(root+"/upload/"+site.getId()+"/");
							if (!folder.exists()) {
								folder.mkdirs();
							}
							if (!targetFile.exists()) {
								targetFile.createNewFile();
							}
							//复制到目标文件
							FileUtil.copy(attchfile, targetFile);

							//生成访问地址
							report.setAttch("/upload/"+site.getId()+"/"+id+ext);
						}
					}
					if (issave) {
						reportService.insert(report);
						msg="感谢您的申报，我们会尽快回复，您可以通过查询码"+report.getQuerycode()+"查询申报信息！";
					}
				}
				//生成静态页面
				Map<String,Object> data=new HashMap<String,Object>();
				setData(data, site);
				data.put("msg", msg);
				templetPath="templet/"+site.getTemplet().trim()+"/"+templetPath;
				response.setCharacterEncoding("UTF-8");
				FreeMarkerUtil.createWriter(getApplication(), data, templetPath, response.getWriter());
			}
		}
		return null;
	}
}
