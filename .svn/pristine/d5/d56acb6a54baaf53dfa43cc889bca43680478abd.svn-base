<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 启动注入功能 -->
	<context:annotation-config />
	<context:property-placeholder location="classpath:shiro-client.properties,classpath:config.properties" />
	<!-- 启动扫描component功能 -->
	<context:component-scan base-package="com"></context:component-scan>
	<!-- 启用@AspectJ支持 <aop:aspectj-autoproxy proxy-target-class="true" /> -->
	<!-- 启动注解事务配置功能 -->
	<tx:annotation-driven proxy-target-class="true" />
	
	<bean id="SpringContextUtil" class="com.gsccs.cms.bass.utils.SpringContextUtil" />
	
	
	<bean id="springCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehcacheManager"/>
    </bean>

    <!--ehcache-->
    <bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache/ehcache.xml"/>
    </bean>

	<!--  将静态方法返回值直接定义成Bean -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<!-- targetClass确定目标类，确定调用哪个类 -->  
		<property name="targetClass" value="java.lang.System" />
		<!-- targetMethod确定目标方法，指定调用目标Bean的哪个方法 -->
		<property name="targetMethod" value="setProperty" />
		<property name="arguments">
			<list>
				<value>system.project_name</value>
				<value>${system.project_name}</value>
			</list>
		</property>
	</bean>
	
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">yes</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">blue</prop>
						<prop key="kaptcha.image.width">125</prop>
						<prop key="kaptcha.image.height">40</prop>
						<prop key="kaptcha.textproducer.font.size">40</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
						 <!-- 使用哪些字符生成验证码 -->
						 <prop key="kaptcha.textproducer.char.string">1234567890</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	
	<import resource="spring-datasource.xml" />
	<import resource="spring-freemarker.xml" />
	<import resource="spring-shiro.xml" />
	<!-- <import resource="spring-job.xml" /> -->
	
</beans>


