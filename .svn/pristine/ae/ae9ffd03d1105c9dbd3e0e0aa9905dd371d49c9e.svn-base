package com.gsccs.cms.controller.web;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import me.chanjar.weixin.common.api.WxConsts;
import me.chanjar.weixin.common.exception.WxErrorException;
import me.chanjar.weixin.mp.api.WxMpConfigStorage;
import me.chanjar.weixin.mp.api.WxMpService;
import me.chanjar.weixin.mp.api.impl.WxMpServiceImpl;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.session.Session;
import org.apache.shiro.subject.Subject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.gsccs.cms.bass.controller.CmsBaseController;
import com.gsccs.cms.bass.utils.ResponseUtil;
import com.gsccs.cms.course.model.Course;
import com.gsccs.cms.course.model.CourseFeed;
import com.gsccs.cms.course.model.CourseInfo;
import com.gsccs.cms.course.model.CourseVote;
import com.gsccs.cms.course.service.CourseService;
import com.gsccs.cms.member.model.Member;
import com.gsccs.cms.member.model.PartyMember;
import com.gsccs.cms.member.service.MemberService;
import com.gsccs.cms.member.service.PartyMemberService;
import com.gsccs.cms.module.service.VoteService;

/**
 * 网上学习
 * 
 * @author x.d zhang
 * @version 1.0
 */
@Controller("WebCourseController")
@RequestMapping("/web")
public class WebCourseController extends CmsBaseController{
	
	//private String DOMAIN = "http://www.pcwxdj.com";
	private String DOMAIN = "http://dunhuangwenbohui.cn/wx";
	private String WXAPPID = "wx1562950d23bf4c3a";
	@Resource
	private VoteService voteService;
	@Resource
	private CourseService couseService;
	@Resource
	private PartyMemberService partyMemberService;
	@Autowired
	private WxMpConfigStorage wxMpConfigStorage;
	@Autowired
	private MemberService memberService;
	
	/**
	 * 党课列表页面
	 * 
	 * @return
	 */
	@RequestMapping("/courseList.html")
	public String courseList(Course param,
			@RequestParam(defaultValue = "1") int page,
			@RequestParam(defaultValue = "10") int pageSize,
			@RequestParam(defaultValue = "") String order,
			ModelMap map) {
		List<Course> courseList = couseService.find(param,order,page,pageSize);
		map.put("courseList", courseList);
		return "web/courseList";
	}
	
	/**
	 * 党课详细页面
	 * 
	 * @return
	 */
	@RequestMapping("/course-{id}.html")
	public String courseById(@PathVariable Integer id,ModelMap map,
			@RequestParam(value = "code") String code) {
		
		List<CourseInfo> infoList = null;
		List<CourseVote> voteList = null;
		List<CourseFeed> feedList = null;
		List<PartyMember> memberList = null;
		Course course = null;
		Member member = null;
		try {
			wxMpConfigStorage.init(WXAPPID);
			WxMpService wxMpService = new WxMpServiceImpl();
			wxMpService.setWxMpConfigStorage(wxMpConfigStorage);
			String openid = wxMpService.oauth2getAccessToken(code).getOpenId();
			
			course = couseService.getCourse(id);
			infoList = couseService.findInfoList(id);
			voteList = couseService.findVoteList(id);
			feedList = couseService.findFeedList(null,id);
			if (null != feedList && feedList.size() > 0) {
				for (CourseFeed guestbook : feedList) {
					List<CourseFeed> replyList = couseService.findByParid(
							guestbook.getId());
					guestbook.setReplyList(replyList);
				}
			}
			
			PartyMember memberParam = new PartyMember();
			memberParam.setUnitid(course.getUnitid());
			memberList = partyMemberService.find(memberParam, "");
			
			member =  memberService.findById(openid);
		} catch (WxErrorException e) {
			e.printStackTrace();
		}
		map.put("member", member);
		map.put("course", course);
		map.put("infoList", infoList);
		map.put("voteList", voteList);
		map.put("feedList", feedList);
		map.put("memberList", memberList);
		return "web/course";
	}
	
	
	/**
	 * 党课详细页面
	 * 
	 * @return
	 */
	@RequestMapping("/course.html")
	public String course(Integer id,ModelMap map) {
		Subject subject = SecurityUtils.getSubject();
		Session session = subject.getSession();
		System.out.println(id);
		Course course = couseService.getCourse(id);
		wxMpConfigStorage.init(WXAPPID);
		WxMpService wxMpService = new WxMpServiceImpl();
		wxMpService.setWxMpConfigStorage(wxMpConfigStorage);
		
		String redirectURI = DOMAIN + "/web/course-"+id+".html";
		String authurl = wxMpService.oauth2buildAuthorizationUrl(redirectURI, WxConsts.OAUTH2_SCOPE_BASE, null);
		System.out.println("authurl:"+authurl);
		return "redirect:"+authurl;
	}
	
	/**
	 * 学习反馈
	 * @return
	 */
	@RequestMapping("/fed.html")
	public String courseFed(CourseFeed courseFed, ModelMap map,
			HttpServletRequest request,HttpServletResponse response) {
		String msg="";
		if (null != courseFed){
			couseService.addCourseFed(courseFed);
			msg = "提交成功，感谢参与！";
		}else{
			msg = "提交成功，数据有误！";
		}
		ResponseUtil.writeUTF(response, msg);
		return null;
	}

}
