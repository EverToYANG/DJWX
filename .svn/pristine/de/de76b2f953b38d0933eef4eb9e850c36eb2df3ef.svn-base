package com.gsccs.cms.freemarker.directive;

import java.io.IOException;
import java.io.Writer;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.gsccs.cms.bass.base.BaseDirective;
import com.gsccs.cms.core.model.Link;
import com.gsccs.cms.core.service.LinkService;

import freemarker.core.Environment;
import freemarker.ext.beans.BeanModel;
import freemarker.ext.beans.BeansWrapper;
import freemarker.template.SimpleNumber;
import freemarker.template.TemplateDirectiveBody;
import freemarker.template.TemplateDirectiveModel;
import freemarker.template.TemplateException;
import freemarker.template.TemplateModel;

/**
 * 链接分类标签
 * 参数 siteid 站点id ;classid 分类id; pagemark 分类页面标识 ;type 类型 1 下拉 2 图片 3文字
 * 
 * 返回值 linkClass 分类对象 index 索引
 * 
 * @author x.d zhang
 * @version 1.0
 * 
 */
@Service("linkClassDirective")
public class LinkClassDirective extends BaseDirective implements
		TemplateDirectiveModel {
	@Resource
	private LinkService linkService;

	public void execute(Environment env, Map params, TemplateModel[] loopVars,
			TemplateDirectiveBody body) throws TemplateException, IOException {

		// 获取参数
		String siteid = getParam(params, "siteid");
		String type = getParam(params, "type");
		String pagemark = getParam(params, "pagemark");

		Writer out = env.getOut();
		if (body != null) {
			// 设置循环变量
			if (loopVars != null && loopVars.length > 0
					&& siteid.trim().length() > 0) {
				// 查询
				Link link = new Link();
				link.setIsClass("1");
				link.setSite(siteid);
				link.setType(type);
				link.setIsok("1");
				link.setId(getParam(params, "classid"));
				link.setPagemark(pagemark);
				
				List<Link> linkList = linkService.findAll(link, " ordernum ");
				if (linkList != null && linkList.size() > 0) {
					for (int i = 0; i < linkList.size(); i++) {
						loopVars[0] = new BeanModel(linkList.get(i),
								new BeansWrapper());
						if (loopVars.length > 1) {
							loopVars[1] = new SimpleNumber(i);
						}
						body.render(env.getOut());
					}
				}
			}
		}
	}

}
