package com.gsccs.cms.controller.module;

import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.gsccs.cms.auth.model.Users;
import com.gsccs.cms.auth.shiro.annotation.CurrentUser;
import com.gsccs.cms.bass.controller.CmsBaseController;
import com.gsccs.cms.bass.exception.AuthException;
import com.gsccs.cms.bass.exception.SiteCheckException;
import com.gsccs.cms.bass.utils.Pager;
import com.gsccs.cms.module.model.Resume;
import com.gsccs.cms.module.service.ResumeService;

/**
 * 
 * 简历相关操作
 * 
 * @author x.d zhang
 * @version 1.0
 * 
 */
@Controller
public class ResumeController extends CmsBaseController {

	@Resource
	private ResumeService resumeService;

	/**
	 * 列表
	 * 
	 * @return
	 */
	@RequestMapping("/resume.do")
	public String resume(Resume resume,
			@RequestParam(defaultValue = " addtime desc ") String order,
			@RequestParam(defaultValue = "1") int currPage,
			@RequestParam(defaultValue = "10") int pageSize, ModelMap map,
			HttpServletResponse response) {
		if (resume == null) {
			resume = new Resume();
		}
		resume.setSiteid(getManageSite().getId());
		List<Resume> resumeList = resumeService.find(resume, order, currPage,
				pageSize);
		int totalCount = resumeService.count(resume);
		Pager pager = new Pager(request);
		pager.appendParam("job");
		pager.appendParam("name");
		pager.appendParam("membername");
		pager.appendParam("reusername");
		pager.appendParam("pageSize");
		pager.appendParam("pageFuncId");
		pager.setCurrPage(currPage);
		pager.setPageSize(pageSize);
		pager.setTotalCount(totalCount);
		pager.setOutStrBootstrap("resume.do");
		map.put("pageStr", pager.getOutStrBootstrap());
		map.put("list", resumeList);
		map.put("order", order);
		map.put("resume", resume);

		return "cms/resume";
	}

	/**
	 * 办理 页面
	 * 
	 * @return
	 */

	@RequestMapping("/resumePro.do")
	public String resumePro(Resume resume, ModelMap map,
			HttpServletResponse response) {
		if (resume != null && resume.getId() != null
				&& resume.getId().trim().length() > 0) {
			resume = resumeService.findById(resume.getId());
		}
		map.put("resume", resume);
		return "cms/resumePro";
	}

	/**
	 * 办理
	 * 
	 * @return
	 */
	@RequestMapping("/resumeProDo.do")
	public String resumeProDo(@CurrentUser Users user, Resume resume,
			String pageFuncId, ModelMap map, HttpServletResponse response) {
		if (resume != null && resume.getId() != null
				&& resume.getId().trim().length() > 0) {
			Resume updateresume = new Resume();
			updateresume.setId(resume.getId());
			updateresume.setRecontent(resume.getRecontent());
			updateresume.setRetime(new Date());
			updateresume.setReuserid(user.getId());
			updateresume.setReusername(getLoginName());
			updateresume.setState("1");
			Resume oldresume = resumeService.findById(resume.getId());
			try {
				resumeService.update(updateresume);
				msg = "回复简历:" + oldresume.getName() + " 成功";
				map.put("forwardSeconds", 3);
			} catch (Exception e) {
				map.put("forwardSeconds", 0);
				msg = "回复简历:" + oldresume.getName() + " 失败:" + e.getMessage();
			} finally {
				operlogService.log(getLoginName(), msg, request);
			}
		}

		map.put("msg", msg);
		map.put("forwardUrl", "resume.do?pageFuncId=" + pageFuncId);
		return "admin/msg";
	}

	/**
	 * 删除
	 * 
	 * @return
	 */
	@RequestMapping("/resumeDel.do")
	public String resumeDel(String ids, String pageFuncId, ModelMap map,
			HttpServletResponse response) {
		if (ids != null && ids.trim().length() > 0) {
			String[] idArr = ids.split(";");
			if (idArr != null && idArr.length > 0) {
				Resume resume = null;
				for (int i = 0; i < idArr.length; i++) {
					if (idArr[i].trim().length() > 0) {
						try {
							resume = resumeService.findById(idArr[i]);
							if (resume != null) {
								resumeService.del(resume.getId());
								msg = "回复简历(" + resume.getName() + ")成功!";
								map.put("forwardSeconds", 3);
							}
						} catch (Exception e) {
							map.put("forwardSeconds", 0);
							e.printStackTrace();
							msg = "回复简历(" + resume.getName() + ")失败:"
									+ e.toString() + "!";
						}
						operlogService.log(getLoginName(), msg, request);
					}
				}
			}
		}
		map.put("msg", msg);
		map.put("forwardUrl", "resume.do?pageFuncId=" + pageFuncId);
		return "admin/msg";
	}
}
