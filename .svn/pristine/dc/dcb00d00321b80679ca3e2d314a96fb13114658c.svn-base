package com.gsccs.cms.controller.web;

import java.io.File;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.alibaba.fastjson.JSON;
import com.gsccs.cms.bass.controller.CmsBaseController;
import com.gsccs.cms.bass.utils.ResponseUtil;
import com.gsccs.cms.core.model.Site;
import com.gsccs.cms.core.service.ChannelService;
import com.gsccs.cms.core.service.SiteService;
import com.gsccs.cms.member.service.CreditruleService;
import com.gsccs.cms.module.model.Guestbook;
import com.gsccs.cms.module.service.GuestBookService;

/**
 * O2O控制类
 * 
 * 留言相关操作
 * 
 * @author x.d zhang
 * @version 1.0
 */
@Controller("WebGuestbookController")
@RequestMapping("/web")
public class WebGuestbookController extends CmsBaseController {

	@Resource
	private GuestBookService guestbookService;
	@Resource
	private SiteService siteService;
	@Resource
	private CreditruleService creditruleService;
	@Resource
	private ChannelService channelService;

	/**
	 * 咨询列表
	 * 
	 * @return
	 */
	@RequestMapping("/gbList.html")
	public String guestbookList(
			@RequestParam(defaultValue = "1") int page,
			@RequestParam(defaultValue = "500") int pagesize, ModelMap map,
			HttpServletResponse response) {
		Guestbook param = new Guestbook();
		List<Guestbook> guestbookList = guestbookService.find(param,
				"addtime desc", page, pagesize, true);
		if (null != guestbookList && guestbookList.size() > 0) {
			for (Guestbook guestbook : guestbookList) {
				List<Guestbook> replyList = guestbookService.findByParid(
						guestbook.getId(), true);
				guestbook.setReplyList(replyList);
			}
		}
		map.put("guestbookList", guestbookList);
		return "web/guestbook";
	}

	
	/**
	 * 发布咨询
	 * 
	 * @return
	 */
	@RequestMapping("/gbAdd.html")
	public String publish(ModelMap map, HttpServletResponse response) {
		
		return "web/publish";
	}
	
	
	/*查询二级单位*/
	@RequestMapping("/getSon.html")
	@ResponseBody
	public String getSon(String id,HttpServletResponse response){
		Site site=new Site();
		site.setSitetype(id);
		List<Site> sites=siteService.find(site, null, 1, 100);
		String sonSubjectJson=JSON.toJSONString(sites);
		response.setCharacterEncoding("utf-8");
		response.setContentType("application/json;charset=UTF-8");
		return sonSubjectJson;
	}
	

	
	/**
	 * 发布咨询
	 * 
	 * @return
	 */
	@RequestMapping("/gbQuery.html")
	public String query(ModelMap map, HttpServletResponse response) {
		return "web/search";
	}

	/**
	 * 保存
	 * 
	 * @return
	 */
	@RequestMapping("/gbSave.html")
	@ResponseBody
	public String guestbookSave(Guestbook guestbook,
			String siteid, ModelMap map,
			HttpServletResponse response) {
		String msg="";
		if (guestbook != null) {
			guestbook.setAddtime(new Date());
			guestbook.setIp(request.getRemoteAddr());
			guestbook.setState("0");
			msg=guestbookService.add(guestbook);
			return msg;
	}
		return null;
	}
	
	//图片上传
/*	@RequestMapping("/upload.html")
	public String uploadImg(@RequestParam(value = "file", required = false) MultipartFile[] file, HttpServletRequest request){
		
	        String path = request.getSession().getServletContext().getRealPath("upload");  
	        String fileName=file[0].getName();
	        File targetFile = new File(path, fileName);  
	        if(!targetFile.exists()){  
	            targetFile.mkdirs();  
	        }  
	  
	        //保存  
	        try {  
	            file.transferTo(targetFile);  
	        } catch (Exception e) {  
	            e.printStackTrace();  
	        }  
	  
	        return "result"; 
	}*/
	
}
