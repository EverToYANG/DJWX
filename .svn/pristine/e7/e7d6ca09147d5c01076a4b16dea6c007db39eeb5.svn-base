package com.gsccs.cms.freemarker.directive;

import java.io.IOException;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.gsccs.cms.bass.base.BaseDirective;
import com.gsccs.cms.bass.utils.DateUtil;
import com.gsccs.cms.core.model.Visit;
import com.gsccs.cms.core.service.VisitService;

import freemarker.core.Environment;
import freemarker.template.SimpleNumber;
import freemarker.template.TemplateDirectiveBody;
import freemarker.template.TemplateDirectiveModel;
import freemarker.template.TemplateException;
import freemarker.template.TemplateModel;

/**
 * 访问统计
 * 
 * 参数 siteid 站点id type 统计类型 today 今天 yesterday 昨天 month 本月
 * 返回值 count 统计量
 * 
 * @author x.d zhang
 * @version 1.0
 * 
 */
@Service("visitDirective")
public class VisitDirective extends BaseDirective implements
		TemplateDirectiveModel {
	@Resource
	private VisitService visitService;

	public void execute(Environment env, Map params, TemplateModel[] loopVars,
			TemplateDirectiveBody body) throws TemplateException, IOException {

		// 获取参数
		// 站点id
		String siteid = getParam(params, "siteid");
		// 类型
		String type = getParam(params, "type");

		if (body != null) {
			// 设置循环变量
			if (loopVars != null && loopVars.length > 0) {

				java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(
						"yyyy-MM-dd");
				java.util.Calendar calendar = java.util.Calendar.getInstance();
				String today = df.format(calendar.getTime());
				calendar.roll(java.util.Calendar.DAY_OF_YEAR, -1);
				String yesterday = df.format(calendar.getTime());
				calendar.roll(java.util.Calendar.DAY_OF_YEAR, 1);
				if (calendar.get(java.util.Calendar.MONTH) == 0) {
					calendar.roll(java.util.Calendar.YEAR, -1);
				}
				calendar.roll(java.util.Calendar.MONTH, -1);
				String month = df.format(calendar.getTime());

				Visit visit = new Visit();
				visit.setSiteid(siteid);
				if ("today".equals(type)) {
					// 今天
					visit.setStarttime(DateUtil.parse(today, "yyyy-MM-dd"));
				} else if ("yesterday".equals(type)) {
					// 昨天
					visit.setStarttime(DateUtil.parse(yesterday, "yyyy-MM-dd"));
					visit.setEndtime(DateUtil.parse(today, "yyyy-MM-dd"));
				} else if ("month".equals(type)) {
					// 本月
					visit.setStarttime(DateUtil.parse(month, "yyyy-MM-dd"));
				}

				loopVars[0] = new SimpleNumber(
						visitService.count(visit, "true".equals(getParam(
								params, "cache")) ? true : false));
				body.render(env.getOut());
			}
		}
	}

	public VisitService getVisitService() {
		return visitService;
	}

	public void setVisitService(VisitService visitService) {
		this.visitService = visitService;
	}
}
