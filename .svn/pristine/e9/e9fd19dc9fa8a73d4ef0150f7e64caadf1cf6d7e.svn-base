package com.gsccs.cms.freemarker.directive;

import java.io.IOException;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.gsccs.cms.auth.model.Config;
import com.gsccs.cms.auth.service.ConfigService;
import com.gsccs.cms.bass.base.BaseDirective;

import freemarker.core.Environment;
import freemarker.ext.beans.BeansWrapper;
import freemarker.ext.beans.StringModel;
import freemarker.template.SimpleNumber;
import freemarker.template.TemplateDirectiveBody;
import freemarker.template.TemplateDirectiveModel;
import freemarker.template.TemplateException;
import freemarker.template.TemplateModel;

/**
 * 系统配置标签
 * 参数: code 系统配置编码 split 配置值分隔符，如果设置则则用分隔符分隔以数组形式处理配置值
 * 
 * 返回值 value 配置值 index 索引
 * 
 * <@config code="mailType" split=",";configvalue,index> ${index+1}
 * ${configvalue} </@config>
 * 
 * 
 * @author x.d zhang
 * @version 1.0
 * 
 */
@Service("configDirective")
public class ConfigDirective extends BaseDirective implements
		TemplateDirectiveModel {
	
	@Resource
	private ConfigService configService;

	public void execute(Environment env, Map params, TemplateModel[] loopVars,
			TemplateDirectiveBody body) throws TemplateException, IOException {

		// 获取参数
		String code = getParam(params, "code");
		String split = getParam(params, "split");

		if (body != null) {
			// 设置循环变量
			if (loopVars != null && loopVars.length > 0) {
				// 查询
				Config config = configService.findByCode(code);
				if (config != null && config.getCodeval() != null) {
					if (split.length() > 0) {
						// 有分隔符，以数组形式处理
						String[] values = config.getCodeval().split(split);
						if (values != null && values.length > 0) {
							for (int i = 0; i < values.length; i++) {
								loopVars[0] = new StringModel(values[i],
										new BeansWrapper());
								if (loopVars.length > 1) {
									loopVars[1] = new SimpleNumber(i);
								}
								body.render(env.getOut());
							}
						}
					} else {
						loopVars[0] = new StringModel(config.getCodeval(),
								new BeansWrapper());
						if (loopVars.length > 1) {
							loopVars[1] = new SimpleNumber(0);
						}
						body.render(env.getOut());
					}
				}
			}
		}
	}

	
}