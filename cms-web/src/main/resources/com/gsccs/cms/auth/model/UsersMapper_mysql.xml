<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gsccs.cms.auth.dao.UsersMapper">
	<resultMap id="BaseResultMap" type="com.gsccs.cms.auth.model.Users">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="unitNames" jdbcType="VARCHAR" property="unitNames" />
		<result column="unitid" jdbcType="VARCHAR" property="unitid" />
		<result column="roleNames" jdbcType="VARCHAR" property="roleNames" />
		<result column="loginName" jdbcType="VARCHAR" property="loginname" />
		<result column="pwd" jdbcType="VARCHAR" property="pwd" />
		<result column="sex" jdbcType="CHAR" property="sex" />
		<result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
		<result column="corpid" jdbcType="VARCHAR" property="corpid" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="isOk" jdbcType="CHAR" property="isok" />
		<result column="ismail" jdbcType="CHAR" property="ismail" />
		<result column="lastLoginTime" jdbcType="TIMESTAMP" property="lastlogintime" />
		<result column="addTime" jdbcType="TIMESTAMP" property="addTime" />
		<result column="lastestLoginTime" jdbcType="TIMESTAMP"
			property="lastestlogintime" />
		<result column="loginFailNum" jdbcType="INTEGER" property="loginFailNum" />
		<result column="loginNum" jdbcType="INTEGER" property="loginNum" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, loginName, pwd, sex, birthday, corpid,phone, email,
		isOk,ismail,
		addTime,lastLoginTime,lastestLoginTime,unitNames,unitid,roleNames,loginFailNum,loginNum
	</sql>

	<sql id="selectByExampleSql">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from sys_users
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</sql>


	<select useCache="false" id="selectByExample"
		parameterType="com.gsccs.cms.auth.model.UsersExample" resultMap="BaseResultMap">
		<include refid="selectByExampleSql" />
	</select>

	<select useCache="true" id="selectByExampleCache"
		parameterType="com.gsccs.cms.auth.model.UsersExample" resultMap="BaseResultMap">
		<include refid="selectByExampleSql" />
	</select>
	<update id="updateById" parameterType="map">
		update sys_users
		set isOk = #{state,jdbcType=CHAR}
		where id= #{id,jdbcType=VARCHAR}
	</update>
	
	<select id="selectPageByExample" parameterType="com.gsccs.cms.auth.model.UsersExample"
		resultMap="BaseResultMap">
		SELECT a.*,b.title as corptitle
		FROM sys_users a 
		left join cms_wx_app b on a.corpid = b.id
		
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>

		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		limit ${skip},${pageSize}
	</select>
	<!-- 分页查询指定部门下用户 -->
	<select id="selectPageByExampleUnits" parameterType="com.gsccs.cms.auth.model.UsersExample"
		resultMap="BaseResultMap">
		SELECT TOP ${pageSize}
		<include refid="Base_Column_List" />
		FROM sys_users
		WHERE (ID NOT IN
		(SELECT TOP ${skip} id
		FROM sys_users
		where id in (select users from sys_unit_user where unit in (${unitid}))
		<if test="_parameter != null">
			<include refid="Example_Clause" />
		</if>

		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		))

		<if test="_parameter != null">
			<include refid="Example_Clause" />
		</if>
		and id in (select users from sys_unit_user where unit in (${unitid}))
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_users
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from sys_users
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.gsccs.cms.auth.model.UsersExample">
		delete from sys_users
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.gsccs.cms.auth.model.Users">
		insert into sys_users (id, name, loginName,
		pwd, sex, birthday,
		corpid,phone, email, isOk,ismail, addTime,
		lastLoginTime,lastestLoginTime,unitNames,unitid,roleNames,loginFailNum,loginNum)
		values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		#{loginname,jdbcType=VARCHAR},
		#{pwd,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{birthday,jdbcType=TIMESTAMP},
		#{corpid,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{isok,jdbcType=CHAR},
		#{ismail,jdbcType=CHAR},
		#{addTime,jdbcType=TIMESTAMP},#{lastlogintime,jdbcType=TIMESTAMP},#{lastestlogintime,jdbcType=TIMESTAMP}
		,#{unitNames,jdbcType=VARCHAR},#{unitid,jdbcType=VARCHAR},#{roleNames,jdbcType=VARCHAR},#{loginFailNum,jdbcType=INTEGER},#{loginNum,jdbcType=INTEGER})
	</insert>
	
	<select id="countByExample" parameterType="com.gsccs.cms.auth.model.UsersExample"
		resultType="java.lang.Integer">
		select count(*) from sys_users
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<select id="countByExampleUnits" parameterType="com.gsccs.cms.auth.model.UsersExample"
		resultType="java.lang.Integer">
		select count(*) from sys_users where id in (select users from
		unit_user where unit in (${unitid}))
		<if test="_parameter != null">
			<include refid="Example_Clause" />
		</if>
	</select>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.gsccs.cms.auth.model.Users">
		update sys_users
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="loginname != null">
				loginName = #{loginname,jdbcType=VARCHAR},
			</if>
			<if test="pwd != null">
				pwd = #{pwd,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=CHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="corpid != null">
				corpid = #{corpid,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="isok != null">
				isOk = #{isok,jdbcType=CHAR},
			</if>
			<if test="ismail != null">
				ismail = #{ismail,jdbcType=CHAR},
			</if>
			<if test="addTime != null">
				addTime = #{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastlogintime != null">
				lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
			</if>
			<if test="loginFailNum != null">
				loginFailNum = #{loginFailNum,jdbcType=INTEGER},
			</if>
			<if test="loginNum != null">
				loginNum = #{loginNum,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.gsccs.cms.auth.model.Users">
		update sys_users
		set name = #{name,jdbcType=VARCHAR},
		loginName = #{loginname,jdbcType=VARCHAR},
		roleNames = #{roleNames,jdbcType=VARCHAR},
		unitNames = #{unitNames,jdbcType=VARCHAR},
		unitid = #{unitid,jdbcType=VARCHAR},
		pwd = #{pwd,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=CHAR},
		birthday = #{birthday,jdbcType=TIMESTAMP},
		corpid = #{corpid,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		isOk = #{isok,jdbcType=CHAR},
		ismail = #{ismail,jdbcType=CHAR},
		addTime = #{addTime,jdbcType=TIMESTAMP},
		lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
		lastestLoginTime = #{lastestlogintime,jdbcType=TIMESTAMP},
		loginFailNum = #{loginFailNum,jdbcType=INTEGER},
		loginNum = #{loginNum,jdbcType=INTEGER}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateLastLoginTime" parameterType="com.gsccs.cms.auth.model.Users">
		update sys_users
		set lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
		lastestLoginTime = #{lastestlogintime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updatePwd" parameterType="com.gsccs.cms.auth.model.Users">
		update sys_users
		set pwd = #{pwd,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="resetPwdByIds" parameterType="map">
		update sys_users
		set pwd = #{pwd,jdbcType=VARCHAR}
		where id in ( #{ids,jdbcType=VARCHAR} )
	</update>
	<update id="resetPwd" parameterType="com.gsccs.cms.auth.model.Users">
		update sys_users
		set pwd = #{pwd,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	
	<select id="have" parameterType="com.gsccs.cms.auth.model.Users"
		resultType="java.lang.Integer">
		select count(*) from sys_users where
		loginName = #{loginname,jdbcType=VARCHAR}
	</select>
	<sql id="Example_Clause">
		<foreach collection="oredCriteria" item="criteria" separator="or">
			<if test="criteria.valid">
				<trim>
					<foreach collection="criteria.criteria" item="criterion">
						<choose>
							<when test="criterion.noValue">
								and ${criterion.condition}
							</when>
							<when test="criterion.singleValue">
								and ${criterion.condition} #{criterion.value}
							</when>
							<when test="criterion.betweenValue">
								and ${criterion.condition} #{criterion.value} and
								#{criterion.secondValue}
							</when>
							<when test="criterion.listValue">
								and ${criterion.condition}
								<foreach close=")" collection="criterion.value" item="listItem"
									open="(" separator=",">
									#{listItem}
								</foreach>
							</when>
						</choose>
					</foreach>
				</trim>
			</if>
		</foreach>
	</sql>
</mapper>